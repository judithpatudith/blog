<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Tech 4 N00bs</title>
    <link>https://judithpatudith.github.io/posts/</link>
    <description>Recent content in Posts on Tech 4 N00bs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 08 Nov 2018 11:22:03 -0800</lastBuildDate>
    
	<atom:link href="https://judithpatudith.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git for Skeptics: Part 2 - Why is saving changes so freaking complicated?</title>
      <link>https://judithpatudith.github.io/posts/git-for-skeptics-2/</link>
      <pubDate>Thu, 08 Nov 2018 11:22:03 -0800</pubDate>
      
      <guid>https://judithpatudith.github.io/posts/git-for-skeptics-2/</guid>
      <description>In my last post, I explained why you need to copy a repo so many times to edit it with Git. Don’t know what a “repo” is? See Part 1.
In this post, I’ll explain why saving a change with Git is so complicated. Each step accomplishes a separate goal and serves as a checkpoint where you can backtrack or edit. The whole process includes making testable modifications, grouping those changes by goal or step, explaining your groups of changes and assigning them to a branch, putting the changed branch online, and asking your reviewer to have a look.</description>
    </item>
    
    <item>
      <title>Git for Skeptics: Part 1 - Why do I need a million copies of this folder?</title>
      <link>https://judithpatudith.github.io/posts/git-for-skeptics-1/</link>
      <pubDate>Tue, 08 May 2018 10:39:17 -0800</pubDate>
      
      <guid>https://judithpatudith.github.io/posts/git-for-skeptics-1/</guid>
      <description>Why write another intro to Git? I feel nervous using systems that I don’t understand. When I started work as Mesosphere’s community manager, I needed to learn a basic Git workflow quickly so that I could begin maintaining our open source project’s website right away. But, I had a hard time understanding the workflow because I didn’t quite understand the point of using Git.
The process of forking, cloning, pulling, branching, saving, testing, adding, commenting, committing, pushing, testing again, discussing, and then going six rounds of this process — just to improve website copy — seemed like gross, jargony overkill.</description>
    </item>
    
  </channel>
</rss>